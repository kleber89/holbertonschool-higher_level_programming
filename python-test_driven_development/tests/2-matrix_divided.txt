The 2-matrix_divided.py module
======================

Using matrix_divided
-------------------

The module divides all elements of a matrix by a
given number and returns a new matrix with
the results of the division.

First import matrix_divided from the 2-matrix_divided.py module:

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

>>> matrix_divided([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 2)
[[0.5, 1.0, 1.5], [2.0, 2.5, 3.0], [3.5, 4.0, 4.5]]

>>> matrix_divided([['a', 'b', 'c'], ['d', 'e', 'f'], ['g', 'h', 'i']], 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix of integers/floats

>>> matrix_divided([[1, 2, 3], [4, 5], [6, 7, 8]], 2)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

>>> matrix_divided([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 'a')
Traceback (most recent call last):
TypeError: div must be a number

>>> matrix_divided([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero

>>> matrix_divided([[3]], 3)
[[1.0]]
